name: Deploy Documentation

on:
  push:
    branches:
      - main
      - master
    paths:
      - 'docs/**'
  workflow_dispatch:

# Permissions pour GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Permettre un seul d√©ploiement concurrent
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Job de build de la documentation
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # R√©cup√®re tout l'historique pour g√©n√©rer les dates
          
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: 'docs/package-lock.json'
          
      - name: Setup Pages
        uses: actions/configure-pages@v4
        
      - name: Install dependencies
        run: |
          cd docs
          npm ci
          
      - name: Install VitePress if not installed
        run: |
          cd docs
          if ! npm list vitepress &> /dev/null; then
            npm install --save-dev vitepress@^1.0.0
          fi
          
      - name: Build documentation
        run: |
          cd docs
          npm run docs:build
          
      - name: Upload artifact for Pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: docs/.vitepress/dist

  # Job de d√©ploiement sur GitHub Pages
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        
      - name: Comment on PR with deployment link
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'üìñ Documentation d√©ploy√©e sur: ${{ steps.deployment.outputs.page_url }}'
            })

  # Job optionnel de test des liens
  test-links:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'pull_request'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          
      - name: Install link checker
        run: npm install -g markdown-link-check
        
      - name: Check links in documentation
        run: |
          find docs -name "*.md" -exec markdown-link-check {} \;

  # Job de notification
  notify:
    runs-on: ubuntu-latest
    needs: [build, deploy]
    if: always()
    
    steps:
      - name: Notify on success
        if: needs.deploy.result == 'success'
        run: |
          echo "‚úÖ Documentation d√©ploy√©e avec succ√®s!"
          echo "üåê URL: https://${{ github.repository_owner }}.github.io/electron-authenticator/"
          
      - name: Notify on failure
        if: needs.deploy.result == 'failure'
        run: |
          echo "‚ùå √âchec du d√©ploiement de la documentation"
          echo "V√©rifiez les logs ci-dessus pour plus de d√©tails"